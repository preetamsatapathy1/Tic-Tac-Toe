{"version":3,"sources":["Cell.js","Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","className","id","this","props","value","React","Component","Grid","state","player1","handleClick","e","output","index","parseInt","target","input","handleInput","setState","onClick","App","nextPlayer","winner","arr","findWinner","win","i","length","combination","alert","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f8d10cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './cell.css'\r\n\r\nclass Cell extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"cell\" id={this.props.id}>\r\n                    {this.props.value}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell","import React from 'react';\r\nimport Cell from './Cell';\r\nimport './grid.css';\r\n\r\nclass Grid extends React.Component{\r\n\r\n    state = {\r\n        player1 : true,\r\n    }\r\n       \r\n    handleClick = e =>{\r\n        let output = this.state.player1 ? \"X\" : \"O\"\r\n        let index = parseInt(e.target.id)\r\n        if(this.props.input[index] != null){\r\n            return\r\n        }\r\n        const{handleInput} = this.props\r\n        handleInput(output,index)\r\n        this.setState({\r\n            player1 : !this.state.player1\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div onClick={this.handleClick}>\r\n                <div className=\"row\">\r\n                    <Cell value={this.props.input[0]} id=\"0\" />\r\n                    <Cell value={this.props.input[1]} id=\"1\"/>\r\n                    <Cell value={this.props.input[2]} id=\"2\"/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Cell value={this.props.input[3]} id=\"3\"/>\r\n                    <Cell value={this.props.input[4]} id=\"4\"/>\r\n                    <Cell value={this.props.input[5]} id=\"5\"/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Cell value={this.props.input[6]} id=\"6\"/>\r\n                    <Cell value={this.props.input[7]} id=\"7\"/>\r\n                    <Cell value={this.props.input[8]} id=\"8\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid","import React from \"react\";\nimport Grid from \"./Grid\";\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    input: [null, null, null, null, null, null, null, null, null],\n    nextPlayer : \"X\",\n    winner :false\n  };\n\n  handleInput = (output, index) => {\n    if(this.state.winner == true){\n      return\n    }\n    \n    let arr = this.state.input;\n    arr[index] = output;\n    this.setState(\n      {\n        input: arr,\n      },\n      () => this.findWinner(output)\n    );\n  };\n\n  findWinner = (output) => {\n    let win = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < win.length; i++) {\n      let combination = win[i];\n      if (this.state.input[combination[0]] === this.state.input[combination[1]] &&\n          this.state.input[combination[1]] === this.state.input[combination[2]] &&\n          this.state.input[combination[0]] != null ) {\n          if(this.state.input[combination[0]] === \"X\"){\n            alert (\"Winner is Player 1\")\n          }\n          else{\n            alert(\"Winner is Player 2\")\n          }\n          this.setState({\n            winner : true,\n            nextPlayer : this.state.input[combination[0]]\n          })\n          return\n      }\n      else{\n        \n        let nextPlayer = \"\"\n        if (output === \"X\"){\n          nextPlayer = \"O\"\n        }\n        else{\n          nextPlayer = \"X\"\n        }\n        this.setState({\n          nextPlayer:nextPlayer\n        },() => console.log(this.state.nextPlayer))\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='game'>\n        {\n          this.state.winner ? <p>Winner : {this.state.nextPlayer} </p> : \n                            <p>Next Player : {this.state.nextPlayer}</p>\n\n        }\n        <Grid input={this.state.input} handleInput={this.handleInput} />\n\n      </div>\n    )\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}